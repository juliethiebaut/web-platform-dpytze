const data = {
  labels: [
    'Lutte contre le changement climatique',
    "Lutte contre l'effondrement de la biodiversité",
    'Lutte contre les pollutions',
    'Réduction de consommation de ressources',
    'Mise en cohérence de la stratégie économique',
    'Implication des salariés',
    "Stratégie d'influence",
  ],
  datasets: [
    {
      label: 'Question 1',
      data: [
        10 / 100,
        20 / 100,
        33 / 100,
        25 / 100,
        33 / 100,
        10 / 100,
        25 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Question 2',
      data: [
        20 / 100,
        40 / 100,
        66 / 100,
        50 / 100,
        66 / 100,
        20 / 100,
        50 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Question 3',
      data: [
        30 / 100,
        60 / 100,
        100 / 100,
        75 / 100,
        100 / 100,
        30 / 100,
        75 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Question 4',
      data: [
        40 / 100,
        80 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        40 / 100,
        100 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Question 5',
      data: [
        50 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        50 / 100,
        100 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Question 6',
      data: [
        60 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        60 / 100,
        100 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Question 7',
      data: [
        70 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        70 / 100,
        100 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Question 8',
      data: [
        80 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        80 / 100,
        100 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Question 9',
      data: [
        90 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        90 / 100,
        100 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Question 10',
      data: [
        100 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
        100 / 100,
      ],
      fill: false,
      // backgroundColor: 'rgba(31, 156, 77, 0.2)',
      // borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
      lineBorderWidth: 0,
    },
    {
      label: 'Oui',
      data: [4 / 10, 2 / 5, 2 / 3, 3 / 6, 0, 2 / 3, 2 / 4],
      fill: true,
      backgroundColor: 'rgba(31, 156, 77, 0.2)',
      borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(31, 156, 77)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(31, 156, 77)',
    },
    {
      label: 'Non',
      data: [9 / 10, 4 / 5, 3 / 3, 5 / 6, 3 / 3, 3 / 3, 3 / 4],
      fill: true,
      backgroundColor: 'rgba(242, 0, 0, 0.2)',
      borderColor: 'rgb(171, 171, 171)',
      pointBackgroundColor: 'rgb(242, 0, 0)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(242, 0, 0)',
    },
    {
      label: 'Non pertinent',
      data: [10 / 10, 5 / 5, 3 / 3, 6 / 6, 3 / 3, 3 / 3, 4 / 4],
      fill: true,
      backgroundColor: 'rgba(171, 171, 171, 0.2)',
      borderColor: 'rgb(171, 171, 171)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
    },
  ],
};

const config = {
  type: 'radar',
  data: data,
  options: {
    elements: {
      line: {
        borderWidth: 3,
      },
    },
    plugins: {
      legend: {
        display: false,
        labels: {
          color: 'rgb(255, 99, 132)',
        },
      },
    },
    scales: {
      r: {
        display: true,
        min: 0,
        max: 100,
        grid: {
          display: true,
        },
      },
    },
  },
};

const myChart = new Chart(document.getElementById('myChart'), config);

const stackedBarData = {
  labels: [
    'Lutte contre le changement climatique',
    "Lutte contre l'effondrement de la biodiversité",
    'Lutte contre les pollutions',
    'Réduction de consommation de ressources',
    'Mise en cohérence de la stratégie économique',
    'Implication des salariés',
    "Stratégie d'influence",
  ],
  datasets: [
    {
      label: 'Oui',
      data: [40, 40, 67, 50, 0, 67, 50],
      fill: true,
      backgroundColor: 'rgba(31, 156, 77, 0.2)',
      borderColor: 'rgb(31, 156, 77)',
      pointBackgroundColor: 'rgb(31, 156, 77)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(31, 156, 77)',
    },
    {
      label: 'Non',
      data: [90, 80, 100, 83, 100, 100, 75],
      fill: true,
      backgroundColor: 'rgba(242, 0, 0, 0.2)',
      borderColor: 'rgb(171, 171, 171)',
      pointBackgroundColor: 'rgb(242, 0, 0)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(242, 0, 0)',
    },
    {
      label: 'Non pertinent',
      data: [100, 100, 100, 100, 100, 100, 100],
      fill: true,
      backgroundColor: 'rgba(171, 171, 171, 0.2)',
      borderColor: 'rgb(171, 171, 171)',
      pointBackgroundColor: 'rgb(171, 171, 171)',
      pointBorderColor: '#fff',
      pointHoverBackgroundColor: '#fff',
      pointHoverBorderColor: 'rgb(171, 171, 171)',
    },
  ],
};

const stackedBar = {
  type: 'bar',
  data: stackedBarData,
  options: {
    indexAxis: 'y',
    scales: {
      x: {
        stacked: true,
        min: 0,
        max: 100,
      },
      y: {
        stacked: true,
      },
    },
  },
};

const myChart2 = new Chart(document.getElementById('myChart2'), stackedBar);
